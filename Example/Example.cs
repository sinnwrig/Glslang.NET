﻿using Glslang.NET;

namespace Application;

public static unsafe class Example
{
    static IncludeResult IncludeFunction(string headerName, string includerName, uint depth, bool isSystemFile)
    {
        Console.WriteLine($"Including a {(isSystemFile ? "system" : "local")} file, `{headerName}` from `{includerName}` at depth {depth}.");
        IncludeResult result;

        result.headerData = "// Nothing to see here";
        result.headerName = headerName;

        return result;
    }

    static void Main()
    {
        CompilationInput input = new CompilationInput()
        {
            language = SourceType.HLSL,
            stage = ShaderStage.Fragment,
            client = ClientType.Vulkan,
            clientVersion = TargetClientVersion.Vulkan_1_3,
            targetLanguage = TargetLanguage.SPV,
            targetLanguageVersion = TargetLanguageVersion.SPV_1_5,
            code = ShaderCode.HlslCode,
            sourceEntrypoint = "pixel",
            defaultVersion = 100,
            defaultProfile = ShaderProfile.None,
            forceDefaultVersionAndProfile = false,
            forwardCompatible = false,
            fileIncluder = IncludeFunction,
            messages = MessageType.Default,
        };

        Console.WriteLine("Creating shader");

        using Shader shader = new Shader(input);

        Console.WriteLine("Created shader");

        if (!shader.Preprocess())
        {
            Console.WriteLine("HLSL preprocessing failed");
            Console.WriteLine(shader.GetInfoLog());
            Console.WriteLine(shader.GetDebugLog());
            Console.WriteLine(ShaderCode.HlslCode);
            return;
        }


        Console.WriteLine("Preprocess info logs:");
        Console.WriteLine(shader.GetInfoLog());

        Console.WriteLine("Preprocess debug logs:");
        Console.WriteLine(shader.GetDebugLog());

        if (!shader.Parse())
        {
            Console.WriteLine("HLSL parsing failed");
            Console.WriteLine(shader.GetInfoLog());
            Console.WriteLine(shader.GetDebugLog());
            Console.WriteLine(shader.GetPreprocessedCode());
            return;
        }

        Console.WriteLine("Parse info logs:");
        Console.WriteLine(shader.GetInfoLog());

        Console.WriteLine("Parse debug logs:");
        Console.WriteLine(shader.GetDebugLog());

        using Program program = new Program();

        program.AddShader(shader);

        if (!program.Link(MessageType.SPVRules | MessageType.VulkanRules))
        {
            Console.WriteLine("HLSL linking failed");
            Console.WriteLine(program.GetInfoLog());
            Console.WriteLine(program.GetDebugLog());
            return;
        }

        Console.WriteLine("Program link info log:");
        Console.WriteLine(program.GetInfoLog());

        Console.WriteLine("Program link debug log:");
        Console.WriteLine(program.GetDebugLog());

        program.GenerateSPIRV(out uint[] words, input.stage);

        string messages = program.GetSPIRVMessages();

        if (!string.IsNullOrWhiteSpace(messages))
            Console.WriteLine(messages);

        Console.WriteLine($"Generated {words.Length} bytes of SPIR-V");

        IsGood(words);


        // foreach (var c in words.Chunk(10))
        // {
        //     Console.WriteLine(string.Join(", ", c.Select(x => string.Format("0x{0:X8}", x))));
        // }

        Console.WriteLine($"Dissasembled SPIR-V:");
        Console.WriteLine(CompilationContext.DisassembleSPIRV(knownGood));
    }


    private static bool IsGood(uint[] words)
    {
        if (words.Length != knownGood.Length)
        {
            Console.WriteLine("Mismatched word length");
            return false;
        }

        if (!words.SequenceEqual(knownGood))
        {
            Console.WriteLine("Non-equal SPIR-V sequence");
            return false;
        }

        Console.WriteLine("SPIR-V sequence matches");
        return true;
    }


    private static readonly uint[] knownGood =
    [
        0x07230203, 0x00010500, 0x0008000B, 0x00000063, 0x00000000, 0x00020011, 0x00000001, 0x0006000B, 0x00000001, 0x4C534C47,
        0x6474732E, 0x3035342E, 0x00000000, 0x0003000E, 0x00000000, 0x00000001, 0x0009000F, 0x00000004, 0x00000004, 0x6E69616D,
        0x00000000, 0x00000055, 0x00000058, 0x0000005C, 0x00000062, 0x00030010, 0x00000004, 0x00000007, 0x00030003, 0x00000005,
        0x000001F4, 0x00040005, 0x00000004, 0x6E69616D, 0x00000000, 0x00060005, 0x00000008, 0x74726556, 0x754F7865, 0x74757074,
        0x00000000, 0x00060006, 0x00000008, 0x00000000, 0x69736F50, 0x6E6F6974, 0x00000000, 0x00050006, 0x00000008, 0x00000001,
        0x6F6C6F43, 0x00000072, 0x000B0005, 0x0000000C, 0x69616D40, 0x7473286E, 0x74637572, 0x7265562D, 0x4F786574, 0x75707475,
        0x66762D74, 0x66762D34, 0x003B3134, 0x00040005, 0x0000000B, 0x75706E69, 0x00000074, 0x00040005, 0x0000000F, 0x756C6176,
        0x00000065, 0x00040005, 0x00000024, 0x756C6176, 0x00003265, 0x00040005, 0x0000002F, 0x756C6176, 0x00003365, 0x00040005,
        0x00000052, 0x75706E69, 0x00000074, 0x00060005, 0x00000055, 0x75706E69, 0x6F502E74, 0x69746973, 0x00006E6F, 0x00050005,
        0x00000058, 0x75706E69, 0x6F432E74, 0x00726F6C, 0x00070005, 0x0000005C, 0x746E6540, 0x6F507972, 0x4F746E69, 0x75707475,
        0x00000074, 0x00040005, 0x0000005D, 0x61726170, 0x0000006D, 0x00040005, 0x00000060, 0x6F6C4724, 0x006C6162, 0x00060006,
        0x00000060, 0x00000000, 0x656D6F53, 0x756C6156, 0x00007365, 0x00030005, 0x00000062, 0x00000000, 0x00040047, 0x00000055,
        0x0000000B, 0x0000000F, 0x00040047, 0x00000058, 0x0000001E, 0x00000000, 0x00040047, 0x0000005C, 0x0000001E, 0x00000000,
        0x00050048, 0x00000060, 0x00000000, 0x00000023, 0x00000000, 0x00030047, 0x00000060, 0x00000002, 0x00040047, 0x00000062,
        0x00000022, 0x00000000, 0x00040047, 0x00000062, 0x00000021, 0x00000000, 0x00020013, 0x00000002, 0x00030021, 0x00000003,
        0x00000002, 0x00030016, 0x00000006, 0x00000020, 0x00040017, 0x00000007, 0x00000006, 0x00000004, 0x0004001E, 0x00000008,
        0x00000007, 0x00000007, 0x00040020, 0x00000009, 0x00000007, 0x00000008, 0x00040021, 0x0000000A, 0x00000007, 0x00000009,
        0x00040020, 0x0000000E, 0x00000007, 0x00000006, 0x00040015, 0x00000010, 0x00000020, 0x00000001, 0x0004002B, 0x00000010,
        0x00000011, 0x00000001, 0x00040015, 0x00000012, 0x00000020, 0x00000000, 0x0004002B, 0x00000012, 0x00000013, 0x00000000,
        0x0004002B, 0x00000006, 0x00000016, 0x41200000, 0x0004002B, 0x00000006, 0x00000018, 0x40800000, 0x0004002B, 0x00000006,
        0x0000001A, 0x41000000, 0x00040020, 0x0000003A, 0x00000007, 0x00000007, 0x0004002B, 0x00000006, 0x0000003F, 0x422E3333,
        0x0004002B, 0x00000012, 0x00000046, 0x00000001, 0x0004002B, 0x00000012, 0x00000049, 0x00000002, 0x0004002B, 0x00000012,
        0x0000004C, 0x00000003, 0x0004002B, 0x00000010, 0x00000053, 0x00000000, 0x00040020, 0x00000054, 0x00000001, 0x00000007,
        0x0004003B, 0x00000054, 0x00000055, 0x00000001, 0x0004003B, 0x00000054, 0x00000058, 0x00000001, 0x00040020, 0x0000005B,
        0x00000003, 0x00000007, 0x0004003B, 0x0000005B, 0x0000005C, 0x00000003, 0x0003001E, 0x00000060, 0x00000007, 0x00040020,
        0x00000061, 0x00000002, 0x00000060, 0x0004003B, 0x00000061, 0x00000062, 0x00000002, 0x00050036, 0x00000002, 0x00000004,
        0x00000000, 0x00000003, 0x000200F8, 0x00000005, 0x0004003B, 0x00000009, 0x00000052, 0x00000007, 0x0004003B, 0x00000009,
        0x0000005D, 0x00000007, 0x0004003D, 0x00000007, 0x00000056, 0x00000055, 0x00050041, 0x0000003A, 0x00000057, 0x00000052,
        0x00000053, 0x0003003E, 0x00000057, 0x00000056, 0x0004003D, 0x00000007, 0x00000059, 0x00000058, 0x00050041, 0x0000003A,
        0x0000005A, 0x00000052, 0x00000011, 0x0003003E, 0x0000005A, 0x00000059, 0x0004003D, 0x00000008, 0x0000005E, 0x00000052,
        0x0003003E, 0x0000005D, 0x0000005E, 0x00050039, 0x00000007, 0x0000005F, 0x0000000C, 0x0000005D, 0x0003003E, 0x0000005C,
        0x0000005F, 0x000100FD, 0x00010038, 0x00050036, 0x00000007, 0x0000000C, 0x00000000, 0x0000000A, 0x00030037, 0x00000009,
        0x0000000B, 0x000200F8, 0x0000000D, 0x0004003B, 0x0000000E, 0x0000000F, 0x00000007, 0x0004003B, 0x0000000E, 0x00000024,
        0x00000007, 0x0004003B, 0x0000000E, 0x0000002F, 0x00000007, 0x00060041, 0x0000000E, 0x00000014, 0x0000000B, 0x00000011,
        0x00000013, 0x0004003D, 0x00000006, 0x00000015, 0x00000014, 0x00050085, 0x00000006, 0x00000017, 0x00000015, 0x00000016,
        0x00050081, 0x00000006, 0x00000019, 0x00000017, 0x00000018, 0x00050083, 0x00000006, 0x0000001B, 0x00000019, 0x0000001A,
        0x00060041, 0x0000000E, 0x0000001C, 0x0000000B, 0x00000011, 0x00000013, 0x0004003D, 0x00000006, 0x0000001D, 0x0000001C,
        0x0006000C, 0x00000006, 0x0000001E, 0x00000001, 0x0000001F, 0x0000001D, 0x00060041, 0x0000000E, 0x0000001F, 0x0000000B,
        0x00000011, 0x00000013, 0x0004003D, 0x00000006, 0x00000020, 0x0000001F, 0x0006000C, 0x00000006, 0x00000021, 0x00000001,
        0x00000004, 0x00000020, 0x00050088, 0x00000006, 0x00000022, 0x0000001E, 0x00000021, 0x00050081, 0x00000006, 0x00000023,
        0x0000001B, 0x00000022, 0x0003003E, 0x0000000F, 0x00000023, 0x0004003D, 0x00000006, 0x00000025, 0x0000000F, 0x00050085,
        0x00000006, 0x00000026, 0x00000025, 0x00000016, 0x00050081, 0x00000006, 0x00000027, 0x00000026, 0x00000018, 0x00050083,
        0x00000006, 0x00000028, 0x00000027, 0x0000001A, 0x0004003D, 0x00000006, 0x00000029, 0x0000000F, 0x0006000C, 0x00000006,
        0x0000002A, 0x00000001, 0x0000001F, 0x00000029, 0x0004003D, 0x00000006, 0x0000002B, 0x0000000F, 0x0006000C, 0x00000006,
        0x0000002C, 0x00000001, 0x00000004, 0x0000002B, 0x00050088, 0x00000006, 0x0000002D, 0x0000002A, 0x0000002C, 0x00050081,
        0x00000006, 0x0000002E, 0x00000028, 0x0000002D, 0x0003003E, 0x00000024, 0x0000002E, 0x0004003D, 0x00000006, 0x00000030,
        0x00000024, 0x00050085, 0x00000006, 0x00000031, 0x00000030, 0x00000016, 0x00050081, 0x00000006, 0x00000032, 0x00000031,
        0x00000018, 0x00050083, 0x00000006, 0x00000033, 0x00000032, 0x0000001A, 0x0004003D, 0x00000006, 0x00000034, 0x00000024,
        0x0006000C, 0x00000006, 0x00000035, 0x00000001, 0x0000001F, 0x00000034, 0x0004003D, 0x00000006, 0x00000036, 0x00000024,
        0x0006000C, 0x00000006, 0x00000037, 0x00000001, 0x00000004, 0x00000036, 0x00050088, 0x00000006, 0x00000038, 0x00000035,
        0x00000037, 0x00050081, 0x00000006, 0x00000039, 0x00000033, 0x00000038, 0x0003003E, 0x0000002F, 0x00000039, 0x00050041,
        0x0000003A, 0x0000003B, 0x0000000B, 0x00000011, 0x0004003D, 0x00000007, 0x0000003C, 0x0000003B, 0x0005008E, 0x00000007,
        0x0000003D, 0x0000003C, 0x00000016, 0x00050041, 0x0000003A, 0x0000003E, 0x0000000B, 0x00000011, 0x0003003E, 0x0000003E,
        0x0000003D, 0x00050041, 0x0000003A, 0x00000040, 0x0000000B, 0x00000011, 0x0004003D, 0x00000007, 0x00000041, 0x00000040,
        0x00070050, 0x00000007, 0x00000042, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F, 0x00050088, 0x00000007, 0x00000043,
        0x00000041, 0x00000042, 0x00050041, 0x0000003A, 0x00000044, 0x0000000B, 0x00000011, 0x0003003E, 0x00000044, 0x00000043,
        0x0004003D, 0x00000006, 0x00000045, 0x00000024, 0x00060041, 0x0000000E, 0x00000047, 0x0000000B, 0x00000011, 0x00000046,
        0x0003003E, 0x00000047, 0x00000045, 0x0004003D, 0x00000006, 0x00000048, 0x0000000F, 0x00060041, 0x0000000E, 0x0000004A,
        0x0000000B, 0x00000011, 0x00000049, 0x0003003E, 0x0000004A, 0x00000048, 0x0004003D, 0x00000006, 0x0000004B, 0x0000002F,
        0x00060041, 0x0000000E, 0x0000004D, 0x0000000B, 0x00000011, 0x0000004C, 0x0003003E, 0x0000004D, 0x0000004B, 0x00050041,
        0x0000003A, 0x0000004E, 0x0000000B, 0x00000011, 0x0004003D, 0x00000007, 0x0000004F, 0x0000004E, 0x000200FE, 0x0000004F,
        0x00010038,
    ];
}